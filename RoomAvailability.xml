<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="RevelDigital Google Calendar Room Gadget" description="Lists your current Google Calendar events in chronological order for a certain location/Room" author="RevelDigital" background="transparent">
  <Locale messages="https://reveldigital.github.io/reveldigital-gadgets/ALL_ALL.xml"/>
  <Locale lang="ru" messages="https://reveldigital.github.io/reveldigital-gadgets/ru_ALL.xml"/>
  <UserPref name="calendarUrl" display_name="Google Calendar ID or URL" datatype="string" />
  <UserPref name="displayFormat" display_name="Display Format"  datatype="enum" default_value="div">
    <EnumValue value="div" display_value="Consolidated" />
    <EnumValue value="table" display_value="Tabular" />
  </UserPref>
  <UserPref name="showHeader" display_name="Show Table Header" datatype="bool" default_value="true" />
  <UserPref name="maxResults" display_name="Max Number of Events" datatype="string" default_value="15" />
  <UserPref name="futureEvents" display_name="Limit Future Events"  datatype="enum" default_value="365">
    <EnumValue value="365" display_value="No Limit" />
    <EnumValue value="0" display_value="Today" />
    <EnumValue value="7" display_value="Next 7 Days" />
    <EnumValue value="30" display_value="Next 30 Days" />
  </UserPref>
  <UserPref name="searchQuery" display_name="Location/Room Name" datatype="string" />
  <UserPref name="header-style" display_name="Header Style" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:24px;text-align:left;" required="true" />
  <UserPref name="body-style" display_name="Body Style" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:18px;" required="true" />
  <UserPref name="scrollSpeed" display_name="Scroll Speed"  datatype="enum" default_value="none">
    <EnumValue value="fastest" display_value="Fastest" />
    <EnumValue value="fast" display_value="Fast" />
    <EnumValue value="medium" display_value="Medium" />
    <EnumValue value="slow" display_value="Slow" />
    <EnumValue value="none" display_value="None" />
  </UserPref>
  <UserPref name="scrollBy" display_name="Scroll By"  datatype="enum" default_value="continuous">
    <EnumValue value="continuous" display_value="Continuous" />
    <EnumValue value="page" display_value="Page" />
  </UserPref>
  <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
  <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
  <UserPref name="ForeColor" datatype="hidden" />
  <UserPref name="BackColor" datatype="hidden" />
</ModulePrefs>
<Content type="html">
<![CDATA[

    <style type="text/css">
        body *
        {
          line-height: 1.2em;
          letter-spacing: 0;
          word-spacing: normal;
        }

        body
        {
          overflow: hidden;
          background: transparent;
          width: __UP_rdW__px;
          height: __UP_rdH__px;
        }

        #data
        {
          padding: 3% 5% 5% 8%;
          height: 100%;
          width: 100%;
          background-color: #__UP_BackColor__;
          height: __UP_rdH__px;
        }

        #events
        {
          padding: 5% 5% 5% 5%;
          position: relative;
          font-size: 5vh;
          height: 100%;
          width: 100%;
          color: #__UP_ForeColor__;
          width: __UP_rdW__px;
        }

        #events h1{
            font-size: 3em;
            color: #__UP_ForeColor__;

        }

        #events h2{
            font-size: 1em;
            position:absolute;
            top: 0;
            left: 0;
            color: #__UP_ForeColor__;
        }
        #events p{
            font-size: 1em;
            color: #__UP_ForeColor__;
        }
        </style>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js" type="text/javascript"></script>
        <script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/moment-with-locales.min.js" type="text/javascript"></script>
        <script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/moment-timezone-with-data.min.js" type="text/javascript"></script>
        <script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/simpledateformat.js" type="text/javascript"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.3/TweenLite.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.3/utils/Draggable.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.3/plugins/CSSPlugin.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.1/plugins/ScrollToPlugin.min.js"></script>
        <script src="https://reveldigital.github.io/reveldigital-gadgets/third-party/autoscroll.js" type="text/javascript"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"></script>
        <script src="https://reveldigital.github.io/gadget-common/utils.js" type="text/javascript"></script>
        <script src="https://www.google.com/jsapi" type="text/javascript"></script>

        <div id="data">
            <div id="events" class="scroll">
            </div>
        </div>

        <script type="text/javascript">

            var prefs = new gadgets.Prefs();

            function load() {

                WebFont.load({
                    google: {
                        families: [
                        RevelDigital.getFamilyName(prefs.getString("header-style"))
                        ]
                    }
                });
                WebFont.load({
                    google: {
                        families: [
                        RevelDigital.getFamilyName(prefs.getString("body-style"))
                        ]
                    }
                });

                moment.locale("__MSG_Lang__");

                if (typeof Client != "undefined" && typeof(Client.getDeviceTimeZoneName) == "function") {
                moment.tz.setDefault(Client.getDeviceTimeZoneName());
                }

                if (true == false) {
                $("#events > table > thead").hide();
                }
                getCalendarData();

                setInterval(update, 60000);
            }

            gadgets.util.registerOnLoadHandler(load);
            //window.onload = load;
            </script>

            <script type="text/javascript">

                function update() {
                    var currTime = new Date();
                    var minutes = currTime.getMinutes();
                    if (minutes.valueOf() == 0 || minutes.valueOf() == 30){
                        console.log("UPDATING AT: " + minutes + " MIN");
                        getCalendarData();
                    }else{
                        console.log("NO UPDATE AT: " + minutes + " MIN");
                    }
                }

                function getCalendarData() {

                    var key = 'AIzaSyDN8dkir1si9vMwWJYz64YCsUIhFustgL8';
                    var queryParams = '&singleEvents=true&maxResults=' + "365" + '&orderBy=startTime';

                    var dfMin = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.000ZZ");
                    var dfMax = new SimpleDateFormat("yyyy-MM-dd'T'23:59:59.000ZZ");

                    var tomorrow = new Date();
                    tomorrow.setDate(new Date().getDate() + "365");
                    var min = dfMin.format(new Date());
                    var max = dfMax.format(tomorrow);

                    queryParams += '&timeMin=' + encodeURIComponent(min);
                    queryParams += '&timeMax=' + encodeURIComponent(max);

                    if (prefs.getString("searchQuery") != '') {
                    queryParams += '&q=' + encodeURIComponent(prefs.getString("searchQuery"));
                    }

                    var url = 'https://www.googleapis.com/calendar/v3/calendars/' + googleUrl("h4ncmnfsieg6mgrknsjqq5f39o@group.calendar.google.com") + '/events?key=' + key + queryParams;

                    // if ("table" != "table") {
                    $("#events").empty();
                    // } else {
                    //     $("#events > table > tbody").empty();
                    // }

                    $.ajax({
                        type: 'GET',
                        url: url,
                        dataType: 'json'
                    })
                    .done(function(response) {
                        var eventStartTime = response.items[0].start.dateTime ? response.items[0].start.dateTime : response.items[0].start.date;
                        var startTime = new Date(eventStartTime);
                        console.log(startTime);
                        if (startTime > Date.now()){
                            formatDiv(0, response.items[0]);
                        }else{
                            formatDiv(response.items[0], response.items[1]);
                        }

                        if ("none" != "none") {
                        $("#data").autoScroll({
                            speed: "medium",
                            by: "continiuous"
                        }).on("done", function() {
                            $("#data").data("plugin_autoScroll").play();
                        });
                        $("#data").data("plugin_autoScroll").play();
                        }
                    })
                    .fail(function(xhr, err) {
                        console.log(url);
                        console.log('get calendar failed: ' + xhr.responseText);
                    });
                }

                function formatDiv(event, nextEvent) {
                    var div = $("#events");

                    if (event !== 0){
                        var startDateTime = event.start.dateTime ? event.start.dateTime : event.start.date;
                        var endDateTime = event.end.dateTime ? event.end.dateTime : event.end.date;

                        var isAllDay = false;
                        if (startDateTime) {
                            if (event.start.date) {
                            isAllDay = true;
                            }
                        }

                        h2 = $("<h2 class=\"where\"/>");
                        $(h2).text(event.location);
                        $(div).append(h2);

                        h1 = $("<h1 class=\"title\"/>");
                        h1.text(event.summary);
                        $(div).append(h1);

                        var sd = moment(startDateTime).format("__MSG_Calendar_DateFormat__");
                        var st = moment(startDateTime).format("__MSG_Calendar_TimeFormat__");
                        var et = moment(endDateTime).format("__MSG_Calendar_TimeFormat__");

                        if (isAllDay) {
                            var ed = moment(endDateTime).subtract('days', 1).format("__MSG_Calendar_DateFormat__");
                        } else {
                            var ed = moment(endDateTime).format("__MSG_Calendar_DateFormat__");
                        }

                        var p = $("<p class=\"date\"/>");

                        var time = '';
                        if (sd == ed) {
                            time += sd;
                        } else {
                            time += sd + " - " + ed;
                        }
                        if (isAllDay) {
                            p.text(time);
                        } else {
                            p.text(time + ", " + st + " - " + et);
                        }
                        $(div).append(p);

                    }else {
                        h2 = $("<h2 class=\"where\"/>");
                        $(h2).text(nextEvent.location);
                        $(div).append(h2);

                        h1 = $("<h1 class=\"title\"/>");
                        h1.text("Available");
                        $(div).append(h1);
                    }

                    var nextStartDateTime = nextEvent.start.dateTime ? nextEvent.start.dateTime : nextEvent.start.date;
                    var nextEndDateTime = nextEvent.end.dateTime ? nextEvent.end.dateTime : nextEvent.end.date;

                    var nextIsAllDay = false;
                    if (nextStartDateTime) {
                        if (nextEvent.start.date) {
                        nextIsAllDay = true;
                        }
                    }

                    var nsd = moment(nextStartDateTime).format("__MSG_Calendar_DateFormat__");
                    var nst = moment(nextStartDateTime).format("__MSG_Calendar_TimeFormat__");
                    var net = moment(nextEndDateTime).format("__MSG_Calendar_TimeFormat__");


                    if (nextIsAllDay) {
                        var ned = moment(nextEndDateTime).subtract('days', 1).format("__MSG_Calendar_DateFormat__");
                    } else {
                        var ned = moment(nextEndDateTime).format("__MSG_Calendar_DateFormat__");
                    }

                    h3 = $("<h3 />");
                    $(h3).text("Next Event");
                    $(div).append(h3);

                    var p2 = $("<p />");
                    p2.text(nextEvent.summary);
                    $(div).append(p2);

                    var p3 = $("<p />");

                    var time2 = "";
                    if (nsd == ned) {
                        time2 += nsd;
                    } else {
                        time2 += nsd + " - " + ned;
                    }
                    if (isAllDay) {
                        p3.text(time2);
                    } else {
                        p3.text(time2 + ", " + nst + " - " + net);
                    }
                    $(div).append(p3);
                }

                var docIdFromUrl = function (url) { return url.match(/[-\w]{25,}/); }

                var googleUrl = function (sourceIdentifier) {

                if (sourceIdentifier.match(/http(s)*:/)) {
                    try {
                    return sourceIdentifier.match(/[ical|feeds]\/(.*?)\/public\//)[1];
                    } catch (error) {
                    return sourceIdentifier.match(/[ical|feeds]\/(.*?)\/private-(.*?)\//)[1];
                    }
                } else {
                    return encodeURIComponent(sourceIdentifier);
                }
                }

            </script>

]]>
</Content>
</Module>